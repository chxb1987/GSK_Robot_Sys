/***************************************************************************
* Module Operation Explanation
* Replace &name& with the name of the file
****************************************************************************/

/***************************************************************************
****************************************************************************
*Copyright(c),2008-2028,广州数控设备有限公司
*File name: decode_lexical_analysis.h
*First Author: 
*Date:06/17/2009  
*接口文件功能描述：
****************************************************************************
****************************************************************************/

#ifndef DECODE_LEXICAL_ANALYSIS_H
#define DECODE_LEXICAL_ANALYSIS_H

#ifdef DECODE_LEXICAL_ANALYSIS_GLOBALS
#define DECODE_LEXICAL_ANALYSIS_EXT
#else
#define DECODE_LEXICAL_ANALYSIS_EXT extern
#endif

/***************************************************************************/
/*Add all #includes here*/
#include "basic_data_type.h"
#include "decode_instructions.h"
#include "decode_typestructs.h"
/***************************************************************************/

#if defined(__cplusplus)
extern "C"
{
#endif

/***************************************************************************/
/*Add all #defines here*/
//typedef struct {
//    int beginPos[DECODE_STR_NAME_LEN+1];
//    int endPos[DECODE_STR_NAME_LEN+1];
//	struct lexical_index{
//        int index;
//        char instrName[DECODE_STR_NAME_LEN+1];
//    }lexicalIndex[INSTR_END_CNT];
//}decode_lexical_info;

typedef enum {//这个顺序不能随便改动，涉及到索引，要与decodeCheckLineType函数保持一致
    LINE_TYPE_NULL = 0,
    LINE_TYPE_NOTE,//注释
    LINE_TYPE_MODULE,//模块开始
    LINE_TYPE_MODULEEND,//模块结束
    LINE_TYPE_PROC,//例行程序开始
    LINE_TYPE_PROCEND,//例行程序结束
    LINE_TYPE_VAR,//是VAR
    LINE_TYPE_PERS,//是PERS
    LINE_TYPE_CONST,//是CONST
    LINE_TYPE_LOCAL,//是LOCAL
    LINE_TYPE_TASK,//是TASK
    LINE_TYPE_IF,
    LINE_TYPE_ELIF,
    LINE_TYPE_IFEND,
    LINE_TYPE_DATA,//是数据行，变量等都是数据行
    LINE_TYPE_INSTRUCTION,//是指令行
    LINE_TYPE_SUBCALL,//例行程序调用，放在倒数
    LINE_TYPE_OPERATION,//运算指令，放在最后
    LINE_TYPE_END_CNT//末尾结束
}decode_line_type;

typedef enum {
    D_CHAR_TYPE_INSTRUCTION = 0,//指令字
    D_CHAR_TYPE_VARTYPE,//变量类型字num等
    D_CHAR_TYPE_VARNAME,//变量名
    D_CHAR_TYPE_MODNAME,//模块名
    D_CHAR_TYPE_PRCNAME,//PROC例行程序名
    D_CHAR_TYPE_FUNNAME,//FUC功能函数名
    D_CHAR_TYPE_TRAPNAME,//TRAP中断功能函数名
}decode_character_type;

#define D_SCOPE_GLOBAL  0 //全局
#define D_SCOPE_TASK    1 //任务
#define D_SCOPE_LOCAL   2 //局部

typedef struct {//建立词法分析中所创建的所有字符快速索引表
    char charName[32];//ABB允许最大是32字节
    int charType:8;//decode_character_type中的类型
    int selfIndex:8;//每种类型在自身表中的索引，如：指令和数据类型索引表
    int scope1:8;//CONST PERS VAR
    int scope2:8;//0:全局 1:TASK 2:LOCAL
    int modParent:16;//所属模块索引编号，因为删除只做标记，所以给16位大些
    int routineParent:16;//所属例行程序
    U32 valPos;//若为变量类型，则此处为值下标索引
}decode_character_property;


/***************************************************************************/

/***************************************************************************/
/*以下开始函数声明*/
/***************************************************************************/ 
/*函数功能：若该函数有特定客户，请注明*/ 
/*输入参数： 参数1：注明输入参数意义及有效性范围*/			
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeInitLexicalInfo(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_str_lexical_analysis(char *str[], decode_instr_parse_info *parse_info);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
char *decodeGetOneSegment(char *inputStr, char *outputStr);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeStrSegmentAnalysis(char *outputStr[], char *inputStr);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeCheckLineType(char *checkStr);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeStringCompareEqual(char *srcStr, char *desStr, int len);//本函数去掉
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeStringCompare(const char *srcStr, const char *desStr, int len);//len为0时全部比较
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

#if defined(__cplusplus)
}
#endif 

#endif
