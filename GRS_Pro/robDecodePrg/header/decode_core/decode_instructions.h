/***************************************************************************
* Module Operation Explanation
* Replace &name& with the name of the file
****************************************************************************/

/***************************************************************************
****************************************************************************
*Copyright(c),2008-2028,广州数控设备有限公司
*File name: decode_instructions.h
*First Author: 
*Date:06/17/2009  
*接口文件功能描述：
****************************************************************************
****************************************************************************/

#ifndef DECODE_INSTRUCTIONS_H
#define DECODE_INSTRUCTIONS_H

#ifdef DECODE_INSTRUCTIONS_GLOBALS
#define DECODE_INSTRUCTIONS_EXT
#else
#define DECODE_INSTRUCTIONS_EXT extern
#endif

/***************************************************************************/
/*Add all #includes here*/
#include "decode_datatype.h"
/***************************************************************************/

#if defined(__cplusplus)
extern "C"
{
#endif

/***************************************************************************/
/*Add all #defines here*/
#define D_INSTR_TYPE_NULL 0
#define D_INSTR_TYPE_VELACC 	(D_INSTR_TYPE_NULL+1) //速度和加速度指令类型
#define D_INSTR_TYPE_MOTIONCFG	(D_INSTR_TYPE_NULL+2) //运动配置相关
#define D_INSTR_TYPE_MOTION		(D_INSTR_TYPE_NULL+3)

#define D_INSTR_OWN_DECODE              (1) //译码模块执行的指令，如逻辑运算等，不需要发给插补
#define D_INSTR_OWN_INTERPRATION        (2) //插补模块的指令，需要发给插补

typedef enum {//指令索引编号枚举类型，要与d_instr_info_global_table顺序一致对应
	INSTR_NUL = 0,//预留为0
    INSTR_NOTE,//为注释 ！
    INSTR_SMT, //每次插入例行程序时预留的<SMT>
    INSTR_MODULE,
    INSTR_ENDMODULE,
    INSTR_PROC,
    INSTR_ENDPROC,
//速度和加速度相关指令
	INSTR_AccSet,
	INSTR_WorldAccLim,
	INSTR_PathAccLim,
	INSTR_SpeedLimAxis,
	INSTR_SpeedLimCheckPoint,
	INSTR_SpeedRefresh,
	INSTR_VelSet,
//运动相关配置
	INSTR_ConfJ,
	INSTR_ConfL,
	INSTR_ActUnit,
	INSTR_DeactUnit,
	INSTR_MechUnitLoad,
	INSTR_GripLoad,
	INSTR_MotionSup,
	INSTR_SingArea,
	INSTR_CirPathMode,
//触发操作相关指令
	INSTR_EOffsOn,
	INSTR_EOffsOff,
	INSTR_EOffsSet,
	INSTR_PDispSet,
	INSTR_PDispOn,
	INSTR_PDispOff,
	INSTR_TriggCheckIO,
	INSTR_TriggIO,
	INSTR_TriggEquip,
	INSTR_TriggInt,
	INSTR_TriggRampAO,
	INSTR_TriggSpeed,
//运动指令
	INSTR_MoveAbsJ,
	INSTR_MoveExtJ,
	INSTR_MoveJ, //movej指令
	INSTR_MoveL,//movel指令
	INSTR_MoveC,
	INSTR_SearchC,
	INSTR_SearchExtJ,
	INSTR_SearchL,
	INSTR_TriggJ,
	INSTR_TriggL,
	INSTR_TriggC,
	INSTR_TriggLIOs,
	INSTR_ClearPath,
	INSTR_StorePath,
	INSTR_RestoPath,
	INSTR_StartMove,
	INSTR_StartMoveRetry,
	INSTR_StopMove,
	INSTR_StopMoveReset,
	INSTR_END_CNT,//指令索引末尾，也可作为指令总数
}decode_instruction_enum;

#if 0
typedef struct {
//	U32 m_flag;//用于位识别可选参数
	struct nec_arg{//必选参数
		decode_robtarget *m_to_point;
		decode_speeddata *m_speed;
		decode_num *m_time;
		decode_zonedata *m_zone;
		decode_tooldata *m_tool;
	}m_nec_arg;
	struct opt_arg{//可选参数
		decode_switch *m_concurrent;
		decode_identno *m_syn_id;
		decode_num *m_velocity;
		decode_stoppointdata *m_inpos;
		decode_wobjdata *m_wobj;
		decode_loaddata *m_tload;
	}m_opt_arg;
}instr_movej_data;
#else
//typedef struct {
//    decode_switch *conCurrent;
//    decode_robtarget *toPoint;
//    decode_identno *synId;
//    decode_speeddata *speed;
//    decode_num *velocity;
//    decode_num *time;
//    decode_zonedata *zoneData;
//    decode_num *zone;
//    decode_stoppointdata *inpos;
//    decode_tooldata *tool;
//    decode_wobjdata *wobj;
//    decode_loaddata *tload;
//}instr_movej_data;
typedef struct {//全部改为下标索引，方便快速访问
    int conCurrent;
    int toPoint;
    int synId;
    int speed;
    int velocity;
    int time;
    int zoneData;
    int zone;
    int inpos;
    int tool;
    int wobj;
    int tload;
}instr_movej_data;

typedef struct {//全部改为下标索引，方便快速访问
    int conCurrent;
    int toPoint;
    int synId;
    int speed;
    int velocity;
    int time;
    int zoneData;
    int zone;
    int inpos;
    int tool;
    int wobj;
    int correction;
    int tload;
}instr_movel_data;

typedef struct {//全部改为下标索引，方便快速访问
    int conCurrent;
    int cirPoint;
    int toPoint;
    int synId;
    int speed;
    int velocity;
    int time;
    int zoneData;
    int zone;
    int inpos;
    int tool;
    int wobj;
    int correction;
    int tload;
}instr_movec_data;
#endif

typedef union {
    instr_movej_data movejData;
    instr_movel_data movelData;
    instr_movec_data movecData;
}decode_instruction_data;

#define DECODE_STR_NAME_LEN 20//指令字符串长度
#define DECODE_INS_ARG_CNT  20//指令所需参数个数总数

//typedef struct {//一条指令的标记
//    U32 mask;//指令参数使用掩码，相应位为1表明该参数被使用，bit0表明指令本身，bit1开始表示参数
//	void *m_parg[DECODE_INS_ARG_CNT];//每一个参数对应的数据类型指针

//}decode_instr_mark;

typedef struct {//解析一条指令结构体
//    U32 lineNum;//所在文件的行，模块中的行
//    U32 filePos;//所在文件的字节位置，暂时不需要
    int modNum;//所在模块
    int modLine;//所在模块行
    int routineNum;//所在例行程序
    int routineLine;//所在例行程序行
    int index;//DecodeInstrInfoGlobalTable的索引号
 //   decode_instr_mark mark;//一条指令的标记
    decode_instruction_data instrData;//指令的数据类型结构，指令中参数是否被使用通过其值下标索引决定，-1则不使用
}decode_instr_parse_info;

typedef int (*decode_instruction_analysis)(char *str[], decode_instr_parse_info *pinfo);
typedef int (*decode_instruction_execute)(decode_instr_parse_info *pinfo);



typedef struct {//指令及组织结构体
    char name[DECODE_STR_NAME_LEN+1];
    int mask; //低8位表示参数类型（要与decode_datatype.h中的顺序一致），bit8~bit15表示指令类型，译码或运动控制，D_INSTR_OWN_INTERPRATION，bit16~bit23位表示所在的参数顺序(从0开始编号)，可选互斥的顺序相同，高8位是否必选参数，-1表示无效
}decode_instruction_org;

typedef struct {
    decode_instruction_org instrOrg[DECODE_INS_ARG_CNT+1];//包括指令名本身作为第一个参数，0元素即为指令本身
    decode_instruction_execute execute;
}decode_instruction_info;


typedef struct {//指令译码词法分析快速索引表
    int beginPos[DECODE_STR_NAME_LEN+1];
    int endPos[DECODE_STR_NAME_LEN+1];
    struct instruction_index{
        int index;
        char instrName[DECODE_STR_NAME_LEN+1];
    }instructionIndex[INSTR_END_CNT];
}decode_instruction_index_info;

typedef struct {//程序运行指针结构体
    int modNum;//程序模块号
    int modLineNum;//模块内的程序行号
}prg_pointer;

typedef struct {
    int cmd;//指令号
    decode_robtarget P;//位姿或关节坐标
    decode_jointtarget J;//moveAbs指令的目标位置
    decode_robtarget P_Circle;//圆上起点与终点之间的一点坐标
    decode_tooldata T;//工具坐标系
    decode_wobjdata W;//用户坐标系

    decode_speeddata V;//速度
    decode_zonedata Z;//停止方式
    decode_stoppointdata S;//
    double time;//指定完成指令的时间，如果设置该指令，以下设置无效	<=0无效(单位:秒)
    prg_pointer prgPointer;//程序运行指针记录

}decode_cmd_data;//译码与插补的中间指令交互数据

//extern decode_instruction_info DecodeInstrInfoGlobalTable[INSTR_END_CNT+1];
/***************************************************************************/

/***************************************************************************/
/*以下开始函数声明*/
/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeInitInstrIndexInfo(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeGetInstructionIndex(char *str);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeInstructionLexicalAnalysis(char *str, decode_instr_parse_info *parse_info);
/***************************************************************************/

/***************************************************************************/ 
/*函数功能：若该函数有特定客户，请注明*/ 
/*输入参数： 参数1：注明输入参数意义及有效性范围*/			
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_accset_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_worldacclim_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_pathacclim_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_speedlimaxis_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_speedlimcheckpoint_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_speedrefresh_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_velset_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_confj_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_confl_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_actunit_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_deactunit_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_mechunitload_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_gripload_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_motionsup_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_singarea_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_cirpathmode_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_eoffson_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_eoffsoff_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_eoffsset_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_pdispset_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_pdispon_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_pdispoff_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggcheckio_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggio_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggequip_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggint_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggrampao_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggspeed_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_moveabsj_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_moveextj_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeInstructMovejAnalysis(char *str[], decode_instr_parse_info *pinfo);
int decodeInstructMoveJExecute(decode_instr_parse_info *pinfo);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_movel_proc(char *str[]);
int decodeInstructMoveLExecute(decode_instr_parse_info *pinfo);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_movec_proc(char *str[]);
int decodeInstructMoveCExecute(decode_instr_parse_info *pinfo);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_searchc_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_searchextj_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_searchl_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggj_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggl_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_triggc_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_trigglios_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_clearpath_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_storepath_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_restopath_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_startmove_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_startmoveretry_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_stopmove_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decode_instruct_stopmovereset_proc(char *str[]);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeInstructionExecute(decode_instr_parse_info *parse_info);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodePushCmdBuf(decode_cmd_data cmdData);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodePopCmdBuf(decode_cmd_data *cmdData);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeResetCmdBuf(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodePushParserBuf(decode_instr_parse_info cmdData);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodePopParserBuf(decode_instr_parse_info *cmdData);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeGetParserBufCnt(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeCheckParserBufCurCmdType(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeResetParserBuf(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/


#if defined(__cplusplus)
}
#endif 

#endif
