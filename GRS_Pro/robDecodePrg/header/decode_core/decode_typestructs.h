/***************************************************************************
* Module Operation Explanation
* Replace &name& with the name of the file
****************************************************************************/

/***************************************************************************
****************************************************************************
*Copyright(c),2008-2028,广州数控设备有限公司
*File name: decode_typestructs.h
*First Author: 
*Date:06/17/2009  
*接口文件功能描述：
****************************************************************************
****************************************************************************/

#ifndef DECODE_TYPESTRUCTS_H
#define DECODE_TYPESTRUCTS_H

#ifdef DECODE_TYPESTRUCTS_GLOBALS
#define DECODE_TYPESTRUCTS_EXT
#else
#define DECODE_TYPESTRUCTS_EXT extern
#endif

/***************************************************************************/
/*Add all #includes here*/
#include "decode_datatype.h"
/***************************************************************************/

#if defined(__cplusplus)
extern "C"
{
#endif

/***************************************************************************/
/*Add all #defines here*/
#define D_TYPENAME_LEN      (32)//根据ABB最大允许输入名称长度为32字符
#define D_TYPEMEMBER_CNT    (10)//参数成员个数

#define D_TYPEDATA_ARRY_CNT (10000)//暂定1万个数据存储数组

#define D_TYPEDATA_SHMEM_NAME   ("MYTYPEDATASHMEM")//变量共享内存名称，由译码模块创建，其它模块使用

typedef union {
    decode_bool boolData;
    decode_num numData;
    decode_dnum dnumData;
    decode_pos posData;
    decode_orient orientData;
    decode_pose poseData;
    decode_speeddata speeddataData;
    decode_zonedata zonedataData;
    decode_string stringData;
    decode_switch switchData;
    decode_robtarget robtargetData;
    decode_identno identnoData;
    decode_stoppointdata stoppointdataData;
    decode_tooldata tooldataData;
    decode_wobjdata wobjdataData;
    decode_loaddata loaddataData;
}decode_type_data;

typedef struct {//类型属性结构体，主要用于新建时显示
    char typeName[D_TYPENAME_LEN+1];//类型名
    int scope;//类型有效范围
    int storeType;//存储类型
    int parentTask;//所属任务，可理解为通道
    int parentModule;//所属模块
    int parentRoutine;//所属例行程序
    int dimension[3];//每维中的维数，ABB最大外围是3维，其中每一维的维度可定义不同
//    decode_type_data *pTypeData;//暂时去掉，要放在外部，改成数组下标索引
}decode_type_property;

typedef int (*decode_typestruct_execute)(decode_type_data *pTypeData);//指令的解析

typedef struct {//类型所包含的成员结构体
    char elementName[D_TYPENAME_LEN+1];//成员名
    int elementMask; //成员掩码：低8位为类型，其余预留，-1表示无效(注意要添加是否整型或浮点型，以便格式化输出)
}decode_typestruct_element;

//typedef struct {//类型组织结构体，用于建立全局索引
//    decode_typestruct_element typeElement[10+1];//最多允许成员数目，首个元素包含自身名称，
//    int mask;//掩码，用于表示该类型是否支持全局定义等属性标记，-1表示无效
//}decode_typestruct_org;

typedef struct {
//    decode_typestruct_org typestructOrg;
    decode_typestruct_element typeElement[10+1];//最多允许成员数目，首个元素包含自身名称，
    int mask;//掩码，用于表示该类型是否支持全局定义等属性标记，-1表示无效, 低4位表示该类型最小大小（如int是4字节，double是8，bit4~bit15是该类型数据类型大小字节数）
    decode_typestruct_execute execute;
}decode_typestruct_info;

typedef struct {//指令译码词法分析快速索引表
    int beginPos[D_TYPENAME_LEN+1];
    int endPos[D_TYPENAME_LEN+1];
    struct typestruct_index{
        int index;
        char typeName[D_TYPENAME_LEN+1];
    }typestructIndex[D_DATATYPE_END_CNT];
}decode_typestruct_index_info;


/***************************************************************************/

/***************************************************************************/
/*以下开始函数声明*/
/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeInitTypestructIndexInfo(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeGetTypestructIndex(char *str);
/***************************************************************************/

/***************************************************************************/ 
/*函数功能：若该函数有特定客户，请注明*/ 
/*输入参数： 参数1：注明输入参数意义及有效性范围*/			
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeTypestructRobtargetExecute(decode_type_data *pTypeData);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeTypestructMallocDataStoreBuf(void);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
void decodeTypestructDeleteDataStoreBuf(int pos);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeTypestructScanfVal(int type, char **str, void *valOft);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeTypestructSetData(int pos, decode_type_data typeData);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeTypestructTransValToStr(int type, char *str, decode_type_data *varVal);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/
int decodeTypestructGetData(int pos, decode_type_data *typeData);
/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/

/***************************************************************************/
/*函数功能：若该函数有特定客户，请注明*/
/*输入参数： 参数1：注明输入参数意义及有效性范围*/
/*输出参数: 	  参数1：注明输出参数意义及有效性范围*/
/*返回值：	  返回值范围及意义*/
/***************************************************************************/

/***************************************************************************/


#if defined(__cplusplus)
}
#endif 

#endif
